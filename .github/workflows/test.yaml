name: Run Tests

on:
  workflow_dispatch:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - '**'
      - '!main'

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: Run Tests
        run: ./gradlew test --build-cache --parallel

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          check_name: 'Test Results'

      - name: Generate Coverage Report
        run: ./gradlew jacocoTestReport
        if: success() || failure()

      - name: Add Coverage PR Comment
        uses: madrapps/jacoco-report@v1.7.1
        if: github.event_name == 'pull_request'
        with:
          paths: |
            **/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 0
          min-coverage-changed-files: 0
          title: Code Coverage Report
          update-comment: true

      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: coverage-reports
          path: |
            **/build/reports/jacoco/test/html/
            **/build/reports/jacoco/test/jacocoTestReport.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-results
          path: |
            **/build/test-results/test/
            **/build/reports/tests/test/

      - name: Generate Job Summary
        if: always()
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "Download the [coverage reports artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) to view detailed HTML coverage." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f build/reports/jacoco/test/html/index.html ]; then
            COVERAGE=$(grep -oP 'Total[^%]*\K\d+(?=%)' build/reports/jacoco/test/html/index.html | head -1 || echo "N/A")
            echo "**Overall Coverage:** ${COVERAGE}%" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🧪 Test Execution" >> $GITHUB_STEP_SUMMARY
          if [ -d build/test-results/test ]; then
            TOTAL=$(find build/test-results/test -name "*.xml" -exec grep -h "tests=" {} \; | grep -oP 'tests="\K\d+' | awk '{s+=$1} END {print s}')
            FAILED=$(find build/test-results/test -name "*.xml" -exec grep -h "failures=" {} \; | grep -oP 'failures="\K\d+' | awk '{s+=$1} END {print s}')
            SKIPPED=$(find build/test-results/test -name "*.xml" -exec grep -h "skipped=" {} \; | grep -oP 'skipped="\K\d+' | awk '{s+=$1} END {print s}')
            PASSED=$((TOTAL - FAILED - SKIPPED))
            echo "- ✅ Passed: ${PASSED}" >> $GITHUB_STEP_SUMMARY
            echo "- ❌ Failed: ${FAILED}" >> $GITHUB_STEP_SUMMARY
            echo "- ⏭️ Skipped: ${SKIPPED}" >> $GITHUB_STEP_SUMMARY
            echo "- 📝 Total: ${TOTAL}" >> $GITHUB_STEP_SUMMARY
          fi
