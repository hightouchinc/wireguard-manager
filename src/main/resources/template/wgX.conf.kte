@import com.hightouchinc.templating.ServerTemplateModel
@param model: ServerTemplateModel
[Interface]
PrivateKey = ${model.privateKey}
Address = 192.168.10.1/24
ListenPort = 51820
SaveConfig = false

# Create nftables table and chains for WireGuard
PostUp = nft add table inet wireguard
PostUp = nft add chain inet wireguard forward_wg { type filter hook forward priority 0\; policy accept\; }
PostUp = nft add chain inet wireguard postrouting_wg { type nat hook postrouting priority srcnat\; policy accept\; }

# Allow established and related connections
PostUp = nft add rule inet wireguard forward_wg ct state established,related accept

# Allow forwarding between WireGuard and ens5 in both directions
PostUp = nft add rule inet wireguard forward_wg iifname "%i" oifname "${model.iface}" accept
PostUp = nft add rule inet wireguard forward_wg iifname "${model.iface}" oifname "%i" accept

# Enable NAT masquerading for outbound traffic from WireGuard
PostUp = nft add rule inet wireguard postrouting_wg oifname "${model.iface}" ip saddr 192.168.10.0/24 masquerade

# Cleanup when bringing down the interface
PostDown = nft delete table inet wireguard 2>/dev/null || true

# Client configurations
@for(client in model.clients)
[Peer]
# Client ID: ${client.id}
# Client Name: ${client.name}
PublicKey = ${client.publicKey}
PresharedKey = ${client.presharedKey}
AllowedIPs = 192.168.10.${client.fourthOctet}/32
@endfor
# Client configurations
